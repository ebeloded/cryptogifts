/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getMyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d8a38038062000d8a833981810160405281019062000037919062000278565b6200006760405180606001604052806022815260200162000d6860229139826200008760201b620002c81760201c565b80600090805190602001906200007f92919062000156565b5050620004c5565b620001298282604051602401620000a0929190620002fe565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012d60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200016490620003ea565b90600052602060002090601f016020900481019282620001885760008555620001d4565b82601f10620001a357805160ff1916838001178555620001d4565b82800160010185558215620001d4579182015b82811115620001d3578251825591602001919060010190620001b6565b5b509050620001e39190620001e7565b5090565b5b8082111562000202576000816000905550600101620001e8565b5090565b60006200021d620002178462000362565b62000339565b9050828152602081018484840111156200023657600080fd5b62000243848285620003b4565b509392505050565b600082601f8301126200025d57600080fd5b81516200026f84826020860162000206565b91505092915050565b6000602082840312156200028b57600080fd5b600082015167ffffffffffffffff811115620002a657600080fd5b620002b4848285016200024b565b91505092915050565b6000620002ca8262000398565b620002d68185620003a3565b9350620002e8818560208601620003b4565b620002f381620004b4565b840191505092915050565b600060408201905081810360008301526200031a8185620002bd565b90508181036020830152620003308184620002bd565b90509392505050565b60006200034562000358565b905062000353828262000420565b919050565b6000604051905090565b600067ffffffffffffffff82111562000380576200037f62000485565b5b6200038b82620004b4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003d4578082015181840152602081019050620003b7565b83811115620003e4576000848401525b50505050565b600060028204905060018216806200040357607f821691505b602082108114156200041a576200041962000456565b5b50919050565b6200042b82620004b4565b810181811067ffffffffffffffff821117156200044d576200044c62000485565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61089380620004d56000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80639a16629914610046578063a413686214610064578063cfae321714610080575b600080fd5b61004e61009e565b60405161005b91906105c0565b60405180910390f35b61007e60048036038101906100799190610537565b6100a6565b005b61008861016d565b60405161009591906105db565b60405180910390f35b600033905090565b61015360405180606001604052806025815260200161083960259139600080546100cf90610766565b80601f01602080910402602001604051908101604052809291908181526020018280546100fb90610766565b80156101485780601f1061011d57610100808354040283529160200191610148565b820191906000526020600020905b81548152906001019060200180831161012b57829003601f168201915b505050505083610364565b806000908051906020019061016992919061042c565b5050565b60606102386040518060400160405280600681526020017f6772656574320000000000000000000000000000000000000000000000000000815250600080546101b590610766565b80601f01602080910402602001604051908101604052809291908181526020018280546101e190610766565b801561022e5780601f106102035761010080835404028352916020019161022e565b820191906000526020600020905b81548152906001019060200180831161021157829003601f168201915b50505050506102c8565b6000805461024590610766565b80601f016020809104026020016040519081016040528092919081815260200182805461027190610766565b80156102be5780601f10610293576101008083540402835291602001916102be565b820191906000526020600020905b8154815290600101906020018083116102a157829003601f168201915b5050505050905090565b61036082826040516024016102de9291906105fd565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610403565b5050565b6103fe83838360405160240161037c93929190610634565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610403565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b82805461043890610766565b90600052602060002090601f01602090048101928261045a57600085556104a1565b82601f1061047357805160ff19168380011785556104a1565b828001600101855582156104a1579182015b828111156104a0578251825591602001919060010190610485565b5b5090506104ae91906104b2565b5090565b5b808211156104cb5760008160009055506001016104b3565b5090565b60006104e26104dd846106a5565b610680565b9050828152602081018484840111156104fa57600080fd5b610505848285610724565b509392505050565b600082601f83011261051e57600080fd5b813561052e8482602086016104cf565b91505092915050565b60006020828403121561054957600080fd5b600082013567ffffffffffffffff81111561056357600080fd5b61056f8482850161050d565b91505092915050565b610581816106f2565b82525050565b6000610592826106d6565b61059c81856106e1565b93506105ac818560208601610733565b6105b581610827565b840191505092915050565b60006020820190506105d56000830184610578565b92915050565b600060208201905081810360008301526105f58184610587565b905092915050565b600060408201905081810360008301526106178185610587565b9050818103602083015261062b8184610587565b90509392505050565b6000606082019050818103600083015261064e8186610587565b905081810360208301526106628185610587565b905081810360408301526106768184610587565b9050949350505050565b600061068a61069b565b90506106968282610798565b919050565b6000604051905090565b600067ffffffffffffffff8211156106c0576106bf6107f8565b5b6106c982610827565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60006106fd82610704565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b82818337600083830152505050565b60005b83811015610751578082015181840152602081019050610736565b83811115610760576000848401525b50505050565b6000600282049050600182168061077e57607f821691505b60208210811415610792576107916107c9565b5b50919050565b6107a182610827565b810181811067ffffffffffffffff821117156107c0576107bf6107f8565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe4368616e67696e67206772656574696e6720782066726f6d202725732720746f2027257327a2646970667358221220b98ea6a4ce2ac21fcf88b654f92786244056e4aed45025ddd691a7be1bad83ec64736f6c634300080400334465706c6f79696e67206120477265657465722077697468206772656574696e673a";

type GreeterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GreeterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Greeter__factory extends ContractFactory {
  constructor(...args: GreeterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(_greeting, overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    _greeting: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_greeting, overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
